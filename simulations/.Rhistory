230+67+28+13+10+7+12
1404+771
log(17070)
log2(17070)
36+28+28+10+3+8
205+58+32+16+6+5+18
205+ 58+32+16+6+5+18
2000*1999/2
198/340
340-198
install.packages("devtools")
source("https://bioconductor.org/biocLite.R")
biocLite("TCGAbiolinks")
biocLite("TCGAbiolinks")
biocLite("maftools")
library(TCGAbiolinks)
library(TCGAbiolinks)
install.packages("cmprsk")
install.packages('cmprsk')
devtools::install_github('BioinformaticsFMRP/TCGAbiolinks')
devtools::install_github('BioinformaticsFMRP/TCGAbiolinks')
install.packages("cmprsk")
13*480
91+35+39+39+86
446+62+64+53
library("devtools")
devtools::install_github("YosefLab/SymSim")
55+40.28+55+203.52+253.00+55+49.06+294+55+70+43.42+25+42.86+274
1515.14+1765.80
5048.17-2106.52
294+247
2220.80-1148+305
2220.90 -1148.67+9.76+305.72
55+30.14+1.43+110+55+51.9+55+9.64+70+55+30.92+189.99+36.35+7.75+7.32+1.43+31.88+50.72+55+1.43
3282-1800
55+40.28+55+203+253+55+49+294+55+70+43+25+42.8+274
198/317
95*0.8
375*1.1
477*1.2
477*1.1
113*0.8
66.3*0.8
777+384-103
103/1058
63+61+55
432+63+61
446/(446+64+62)
64/(446+64+62)
62/(446+64+62)
4.1*4.7
4.1/4.
4.1/4.7
135*0.87
141*0.95
120.29*0.95
120/3.75*4
log(5,2)
log(50,2)
log(500,2)
log(5000,2)
126/179
62/126
library('Seurat')
package_version(Seurat)
package_version('Seurat')
packageVersion('Seurat')
?install.packages
.libPaths()
.libPaths("~/anaconda/lib/R/library")
.libPaths()
devtools::install_version(package = 'Seurat', version = package_version('2.3.4'))
devtools::install_version(package = 'Seurat', version = package_version('2.3.0'))
library(remotes)
packageVersion(remotes)
packageVersion('remotes')
update_packages("remotes")
devtools::install_version(package = 'Seurat', version = package_version('2.3.0'))
packageVersion('remotes')
install.packages('devtools')
devtools::install_version(package = 'Seurat', version = package_version('2.3.0'))
detach('remotes')
detach("package:remotes", unload = T)
devtools::install_version(package = 'Seurat', version = package_version('2.3.0'))
packageVersion(sessionInfo())
packageVersion(sessionInfo
)
packageVersion('sessionInfo')
update.packages('sessioninfo')
update.packages('sessionInfo')
devtools::install_version(package = 'Seurat', version = package_version('2.3.0'))
detach("package:sessionInfo", unload = T)
detach("package:sessioninfo", unload = T)
devtools::install_version(package = 'Seurat', version = package_version('2.3.0'))
detach("package:sessioninfo", unload = T)
source("https://z.umn.edu/archived-seurat")
install.packages("Seurat", repos = "https://satijalab.org/ran", type = type)
.libPaths()
.libPaths("/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
.libPaths()
source("https://z.umn.edu/archived-seurat")
detach("package:Seurat", unload = T)
source("https://z.umn.edu/archived-seurat")
install.packages("Seurat", repos = "https://satijalab.org/ran", type = type)
source("https://z.umn.edu/archived-seurat")
install.packages("Seurat", repos = "https://satijalab.org/ran", type = type)
devtools::install_version(package = 'Seurat', version = package_version('2.3.0'))
devtools::install_version(package = 'Seurat', version = package_version('2.3.4'))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("multtest")
devtools::install_version(package = 'Seurat', version = package_version('2.3.4'))
library(Seurat)
packageVersion('Seurat')
55/81
639/168 +1100/168
2/(808/168 +1300/168)
2/(808/250 +1300/250)
19/76
67/346
54/228
32/194
41/(41+162)
45/(45+260)
prop.test(c(112, 220), c(1066/2, 1066/2), p = NULL, alternative = "two.sided",
correct = TRUE)
112/1066
?prop.test
prop.test(112,533, p = NULL, alternative = "two.sided",
correct = TRUE)
prop.test(220,533, p = NULL, alternative = "two.sided",
correct = TRUE)
prop.test(c(49,39),c(254,254), p = NULL, alternative = "two.sided",
correct = TRUE)
?chisq.test
8.4/10.3
pnorm(3.157)
?pnorm
pnorm(6.22881869049588, 3.772908398407359, 0.7778537980117928)
pnorm(6.22881869049588, 3.772908398407359, 0.7778537980117928, lower.tail = F)
qnorm(0.975, 3.772908398407359, 0.7778537980117928)
qnorm(0.975, 3.772908398407359, 0.7778537980117928, lower.tail = F)
2**(5.297-1)
2**(5.297-1)/1066
2**(2.248-1)/1066
(2**2.248-1)/1066
(2**5.297-1)/1066
800*5
26+41+143+165
22 +41+143+165
0.05/371/242
library(grPregOverlap)
library(grpregOverlap)
install.packages(grpregOverlap)
install.packages("grpregOverlap")
install.packages("grpregOverlap")
install.packages("grpregOverlap")
devtools::install_github("YaohuiZeng/grpregOverlap")
devtools::install_github("YaohuiZeng/grpregOverlap")
library(grpregOverlap)
library(fabricate)
install.packages(fabricatr)
install.packages("fabricatr")
library(fabricate)
library(fabricatr)
?runif
?poisson
?Poisson
dpois(5, 1, log = FALSE)
rpois
rpois(5, 1)
?rnorm
rpois(20, 1)
?rneg
?rnbinom
rnbinom(5, 10, 0.1)
rnbinom(5, 1, 0.1)
rnbinom(5, 2, 0.1)
rnbinom(5, 20, 0.1)
rnbinom(5, 20, 0.01)
rpois(10, 1)
rpois(20, 1)
rpois(20, 1) + rpois(20,1)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
hier_data
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
plot(hier_data$sum_weight)
plot.hist(hier_data$sum_weight)
hist(hier_data$sum_weight)
View(hier_data)
View(hier_data)
hier_data$l1
unique(hier_data$l1)
c(unique(hier_data$l1), unique(hier_data$l2))
lapply(paste0("1", hier_data$l1))
paste0("1", hier_data$l1)
paste0("1", unique(hier_data$l1))
paste0("1_", unique(hier_data$l1))
c_names <- c(paste0("L1_", unique(hier_data$l1)),
paste0("L2_", unique(hier_data$l2)),
paste0("L3_", unique(hier_data$l3)),
paste0("L4_", unique(hier_data$l4)))
paste(1:780, '\t', 1:780)
paste(1:780, "\t", 1:780)
paste0(1:780, "\t", 1:780)
x<-paste0(1:780, "\t", 1:780)
tmp = tempfile()
con <-file(tmp, 'w')
writeLines(x, con=con)
setwd("~/PycharmProjects/HiSig/R")
tmp = tempfile()
con <-file(tmp, 'w')
writeLines(x, con=con)
close(con)
tmp = tempfile()
writeLines(x, con = tmp)
writeLines(x)
x<-paste0(0:length(c_names)-1, "\t", 1:780)
x
x<-paste0(1:length(c_names)-1, "\t", 1:length(c_names)-1)
x
match(c("L1_1", "L1_2"), c_names)
match(paste0("L1_", hier_data$l1), c_names)
length(hier_data)
nrow(hierdata)
nrow(hier_data)
x<-paste0(1:nrow(hier_data))-1, "\t", 1:nrow(hier_data)-1)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
setwd("~/PycharmProjects/HiSig/R")
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
outf
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
780 +625
length(unique(l1)) +length(unique(l2)) +length(unique(l3))
match(paste0("L4_", l4), c_names)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
hist(l2_weight)
draw_binary(prob = 0.3, N = 5),
draw_binary(prob = 0.3, N = 5)
draw_binary(prob = 0.5, N = 5)
draw_binary(prob = 0.5, N = 5)
N = c(5,5,5,5)
N[[1]]
N[[1]] + N[[2]]
layer_names = paste0('L', 1:4)
hier_data <-
fabricate(
layer_names[[1]] = add_level(
l1_weight = rpois(N[[1]], 1)
)
)
layer_names[[1]]
hier_data <-
fabricate(
layer_names[[1]] = add_level(
l1_weight = rpois(N[[1]], 1)
)
)
hier_data <-
fabricate(
lq = add_level(
l1_weight = rpois(N[[1]], 1)
)
)
N
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
hier_data <-
fabricate(
L = add_level(
weight = rpois(N[[1]], 1)
)
)
hier_data %>%
rename(
L = paste0('L', 1),
)
hier_data <-
fabricate(
L = add_level(
weight = rpois(N[[1]], 1)
)
)
M = c(5,5,5,5)
hier_data <-
fabricate(
L = add_level(
N=M[[1]]
weight = rpois(N, 1)
)
)
hier_data <-
fabricate(
L = add_level(
N=M[[1]],
weight = rpois(N, 1)
)
)
rnbinom(5, 20, 0.01)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
780-625
View(hier_data)
View(hier_data)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
hist(hier_data$sum_weight)
hist(hier_data$sum_weight,20)
hist(hier_data$sum_weight,10)
hier_data$sum_weight
paste0(1:nrow(hier_data)-1, "\t", x3)
paste0(1:nrow(hier_data)-1, "\t", hier_data$sum_weight)
paste0('gene', 1:nrow(hier_data)-1, "\t", hier_data$sum_weight)
match(paste0("L1_", L1), c_names) + nrow(hier_data) -1
c_names <- c(paste0("L1_", unique(L1)),
paste0("L2_", unique(L2)),
paste0("L3_", unique(L3)),
paste0("L4_", unique(L4)))
match(paste0("L1_", L1), c_names) + nrow(hier_data) -1
c_names
hier_data$L2.select
hier_data[hier_data$L2.select == 1,]$L2
unique(hier_data[hier_data$L2.select == 1,]$L2)
paste0("L1_", unique(L1)
)
paste0("L1_", unique(L1)) + paste0("L1_", unique(L2))
c <- paste0("L1_", unique(L1) )
c
x <- paste0("L1_", unique(L1) )
c(x, paste0("L1_", unique(L1) ))
x<-c()
x
c(x, paste0("L1_", unique(L1) ))
x = 'L1'
hier_data$x
hier_data[[x]]
unique(hier_data[[x]])
'L'+1
attach(hier_data)
unique([[x]])
unique(hier_data[[x]])
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
cols
coln = paste0('L', i)
i = 1
coln = paste0('L', i)
cols = paste0('L', i, '.select')
unique(hier_data[hier_data[[cols]] == 1,][[coln]])
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
i = 1
coln = paste0('L', i)
cols = paste0('L', i, '.select')
sel = unique(hier_data[hier_data[[cols]] == 1,][[coln]])
length(sel)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
setwd("~/PycharmProjects/HiSig/simulations")
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
unique(hier_data[[coln]])
unique(hier_data[['L2']])
View(hier_data)
View(hier_data)
match( paste0('L', i, '_', unique(hier_data[[coln]])), clust_names) + nrow(hier_data) -1
clust_names = c()
for (i in 1:(nlayers-1)) {
coln = paste0('L', i)
clust_names <- c(clust_names, paste0('L', i, '_', unique(hier_data[[coln]])))
}
coln = paste0('L', i)
x = match( paste0('L', i, '_', unique(hier_data[[coln]])), clust_names) + nrow(hier_data) -1
x
match( paste0('L', i, '_', unique(hier_data[[coln]])), clust_names)
coln
i = 1
coln = paste0('L', i)
match( paste0('L', i, '_', unique(hier_data[[coln]])), clust_names)
match( paste0('L', i, '_', unique(hier_data[[coln]])), clust_names) + nrow(hier_data) -1
match( paste0('L', i, '_', hier_data[[coln]]), clust_names) + nrow(hier_data) -1
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
rpois(5, 1)
rpois(5, 1)
rpois(5, 1)
rpois(5, 1)
rpois(5, 1)
rpois(5, 1)
rpois(10, 1)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
hier_data <-
fabricate(
L = add_level(
N = M[[1]],
select = draw_binary(prob=p, N=N),
# weight = rpois(N, 1) * select,
# sum_weight = weight
)
)
hier_data <-
fabricate(
L = add_level(
N = M[[1]],
select = draw_binary(prob=p, N=N)
# weight = rpois(N, 1) * select,
# sum_weight = weight
)
)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
View(hier_data)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
View(hier_data)
hier_data <-
fabricate(
L = add_level(
N = M[[1]],
select = draw_binary(prob=p, N=N)
# weight = rpois(N, 1) * select,
# sum_weight = weight
)
)
names(hier_data)[names(hier_data) == 'L'] <- 'L1'
# names(hier_data)[names(hier_data) == 'select'] <- 'L1.select'
# names(hier_data)[names(hier_data) == 'weight'] <- 'L1.weight'
hier_data$sum_weight = 0
for (x in 2:nlayers) {
hier_data <-
fabricate(
data = hier_data,
L = add_level(
N = M[[x]],
preselect = select,
weight = rpois(N, 1)*preselect, # differ the last layer
select = draw_binary(prob=p, N=N), # make new selection
sum_weight = sum_weight + weight
)
)
names(hier_data)[names(hier_data) == 'L'] <- paste0('L', x)
names(hier_data)[names(hier_data) == 'preselect'] <- paste0('L', x-1,'.select')
names(hier_data)[names(hier_data) == 'weight'] <-paste0('L', x, '.weight')
}
View(hier_data)
View(hier_data)
hier_data <-
fabricate(
L = add_level(
N = M[[1]],
select = draw_binary(prob=p, N=N)
# weight = rpois(N, 1) * select,
# sum_weight = weight
)
)
names(hier_data)[names(hier_data) == 'L'] <- 'L1'
# names(hier_data)[names(hier_data) == 'select'] <- 'L1.select'
# names(hier_data)[names(hier_data) == 'weight'] <- 'L1.weight'
hier_data$sum_weight = 0
for (x in 2:nlayers) {
hier_data <-
fabricate(
data = hier_data,
L = add_level(
N = M[[x]],
preselect = select,
weight = rpois(N, 1)*preselect, # differ the last layer
select = draw_binary(prob=p, N=N), # make new selection
sum_weight = sum_weight + weight
)
)
names(hier_data)[names(hier_data) == 'L'] <- paste0('L', x)
names(hier_data)[names(hier_data) == 'preselect'] <- paste0('L', x-1,'.select')
names(hier_data)[names(hier_data) == 'weight'] <-paste0('L', x, '.weight')
}
hier_data <-
)
hier_data <-
fabricate(
L = add_level(
N = M[[1]],
select = draw_binary(prob=p, N=N)
# weight = rpois(N, 1) * select,
# sum_weight = weight
)
)
names(hier_data)[names(hier_data) == 'L'] <- 'L1'
# names(hier_data)[names(hier_data) == 'select'] <- 'L1.select'
# names(hier_data)[names(hier_data) == 'weight'] <- 'L1.weight'
hier_data$sum_weight = 0
for (x in 2:nlayers) {
hier_data <-
fabricate(
data = hier_data,
L = add_level(
N = M[[x]],
preselect = select,
weight = rpois(N, 1)*preselect, # differ the last layer
select = draw_binary(prob=p, N=N), # make new selection
sum_weight = sum_weight + weight
)
)
names(hier_data)[names(hier_data) == 'L'] <- paste0('L', x)
names(hier_data)[names(hier_data) == 'preselect'] <- paste0('L', x-1,'.select')
names(hier_data)[names(hier_data) == 'weight'] <-paste0('L', x, '.weight')
}
View(hier_data)
View(hier_data)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
View(hier_data)
View(hier_data)
View(hier_data)
source('~/PycharmProjects/HiSig/R/simulate.r', echo=TRUE)
